//Сотрудника с максимальной заработной платой.

SELECT *
FROM employee
WHERE salary=(SELECT MAX(salary) FROM employee)

//Вывести одно число: максимальную длину цепочки руководителей по таблице сотрудников (вычислить глубину дерева).
 
CREATE DEFINER=`root`@`localhost` PROCEDURE `chiefes_counter`()
BEGIN
DECLARE done INT DEFAULT 0;
declare chief_id int;

declare count int default 1;
declare max_count int default 0;
declare empl_id int;
declare cur1 cursor for (select id from employee);

declare continue handler for sqlstate '02000' set done=1;
open cur1;
repeat
	fetch cur1 into empl_id;
	if(not done) then
        set chief_id=(select employee.chief_id from employee where id=empl_id);
        set count=1;
		while(chief_id is not null) do
			set chief_id=(select employee.chief_id from employee where id=chief_id);
			set count=count+1;
		end while;
        if(count>max_count) then 
			set max_count=count;
        end if;
	end if;
until done end repeat;
close cur1;
select max_count;
END
//Отдел, с максимальной суммарной зарплатой сотрудников. 

SELECT department_id,SUM(salary) as sum_salary
from employee
GROUP BY department_id
having sum_salary=(
select max(temp.sum_salary)
from
(SELECT department_id as id, SUM(salary) AS sum_salary
from employee
GROUP BY department_id) as temp);

//Сотрудника, чье имя начинается на «Р» и заканчивается на «н».

SELECT *
FROM employee
WHERE LEFT(name,1)='Р' AND RIGHT(name,1)='н'
//Второй вариант
SELECT *
FROM employee
WHERE name like "Р%н"
